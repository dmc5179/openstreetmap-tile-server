#FROM ubuntu:18.04
FROM registry.access.redhat.com/rhel7.6

LABEL maintainer="Dan Clark <danclark@redhat.com>"

# Based on
# https://switch2osm.org/manually-building-a-tile-server-18-04-lts/

# Install dependencies
#RUN apt-get update
RUN yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
RUN yum-config-manager --enable rhel-7-server-rpms \
  && yum-config-manager --enable rhel-7-server-extra-rpms \
  && yum-config-manager --enable rhel-7-server-optional-rpms \
  && yum -y install \
#  libboost-all-dev \
  git \
  tar \
  unzip \
  wget \
  bzip2 \
#  build-essential \
  autoconf \
  libtool \
  libxml2-devel \
  geos-devel \
#  libgeos++-devel \
  libpqxx-devel \
  bzip2-devel \
  proj-devel \
  munin-node \
  munin \
  protobuf-c-devel \
  protobuf-c-compiler \
  freetype-devel \
  libtiff-devel \
  libicu-devel \
  gdal-devel \
  cairo-devel \
  cairomm-devel \
  httpd \
  httpd-devel \
  agg-devel \
#  liblua5.2-dev \
#  ttf-unifont \
  SDL_ttf \
  SDL2_ttf \
  lua \
  lua-devel \
  libgeotiff-devel 
#  libgeotiff-epsg

# Set up environment and renderer user
ENV TZ=UTC
RUN ln -sf /usr/share/zoneinfo/UTC /etc/localtime
RUN useradd -U -p "" renderer
USER renderer

# Install latest osm2pgsql
RUN mkdir /home/renderer/src
WORKDIR /home/renderer/src
RUN git clone https://github.com/openstreetmap/osm2pgsql.git
WORKDIR /home/renderer/src/osm2pgsql
USER root
RUN yum -y install \
  make \
  cmake \
  gcc \
  gcc-c++ \
  boost-devel \
  boost-system \
  boost-filesystem \
  expat-devel \
  zlib-devel

USER renderer
RUN mkdir build
WORKDIR /home/renderer/src/osm2pgsql/build
RUN cmake ..
RUN make
USER root
RUN make install
USER renderer

# Install and test Mapnik
USER root
RUN yum -y install \
  gdal
  gdal-devel \
  osm2pgsql
#  libmapnik-dev \
#  mapnik-utils \
#  python-mapnik


# Need to build mapnik as there is no RHEL package

# install deps
sudo yum -y install make gcc47 gcc-c++ bzip2-devel libpng-devel libtiff-devel zlib-devel libjpeg-devel libxml2-devel python-setuptools git-all python-nose python-devel python proj-devel proj proj-epsg proj-nad freetype-devel freetype libicu-devel libicu git bzip2

# install optional deps
sudo yum -y install gdal-devel gdal postgresql-devel sqlite-devel sqlite libcurl-devel libcurl cairo-devel cairo pycairo-devel pycairo postgresql93 postgresql93-server postgresql93-libs postgresql93-contrib postgresql93-devel postgis2_93 vim

git clone https://github.com/mapnik/mapnik -b 2.3.x
cd mapnik
./configure
make
make test
make install

echo '/usr/local/lib' > /etc/ld.so.conf.d/mapnik.conf
ldconfig

#################

USER renderer
RUN python -c 'import mapnik'

# Install mod_tile and renderd
WORKDIR /home/renderer/src
RUN git clone -b switch2osm https://github.com/SomeoneElseOSM/mod_tile.git
WORKDIR /home/renderer/src/mod_tile
RUN ./autogen.sh
RUN ./configure
RUN make
USER root
RUN make install
RUN make install-mod_tile
RUN ldconfig
USER renderer

# Configure stylesheet
WORKDIR /home/renderer/src
RUN git clone https://github.com/gravitystorm/openstreetmap-carto.git
WORKDIR /home/renderer/src/openstreetmap-carto
RUN yum -y install npm nodejs
RUN npm install -g carto
USER renderer
RUN carto -v
RUN carto project.mml > mapnik.xml

# Load shapefiles
WORKDIR /home/renderer/src/openstreetmap-carto
RUN scripts/get-shapefiles.py

# Install fonts
USER root
RUN yum -y install \
  fonts-noto-cjk \
  fonts-noto-hinted \
  fonts-noto-unhinted \
  ttf-unifont
USER renderer

# Configure renderd
USER root
RUN sed -i 's/renderaccount/renderer/g' /usr/local/etc/renderd.conf
RUN sed -i 's/hot/tile/g' /usr/local/etc/renderd.conf
USER renderer

# Configure Apache
USER root
RUN mkdir /var/lib/mod_tile
RUN chown renderer /var/lib/mod_tile
RUN mkdir /var/run/renderd
RUN chown renderer /var/run/renderd
RUN echo "LoadModule tile_module /usr/lib/apache2/modules/mod_tile.so" >> /etc/apache2/conf-available/mod_tile.conf
RUN a2enconf mod_tile
COPY apache.conf /etc/apache2/sites-available/000-default.conf
USER renderer

# Install PostgreSQL
USER root
RUN yum -y install \
  postgresql \
  postgresql-contrib \
  postgis \
  postgresql-10-postgis-2.4
USER renderer

# Start running
USER root
RUN apt-get install -y sudo
COPY run.sh /
ENTRYPOINT ["/run.sh"]
CMD []
